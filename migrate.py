import json
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database import db

def migrate_from_json():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–æ–≤ –≤ PostgreSQL"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON –≤ PostgreSQL...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    if not db.conn:
        print("‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL!")
        return
    
    # –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        if os.path.exists('users.json'):
            with open('users.json', 'r', encoding='utf-8') as f:
                users_data = json.load(f)
            
            user_ids = users_data.get('users', [])
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(user_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏")
            
            success_count = 0
            for i, user_id in enumerate(user_ids, 1):
                if db.add_user(user_id):
                    success_count += 1
                if i % 50 == 0:
                    print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {i}/{len(user_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
            print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {success_count}/{len(user_ids)}")
        else:
            print("‚ùå –§–∞–π–ª users.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
    
    # –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    try:
        if os.path.exists('user_settings.json'):
            with open('user_settings.json', 'r', encoding='utf-8') as f:
                settings_data = json.load(f)
            
            print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(settings_data)} –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏")
            
            success_count = 0
            for i, (user_id_str, settings) in enumerate(settings_data.items(), 1):
                try:
                    user_id = int(user_id_str)
                    if db.update_user_settings(user_id, settings):
                        success_count += 1
                    if i % 50 == 0:
                        print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {i}/{len(settings_data)} –Ω–∞—Å—Ç—Ä–æ–µ–∫")
                except ValueError:
                    print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π user_id: {user_id_str}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è {user_id_str}: {e}")
            
            print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {success_count}/{len(settings_data)}")
        else:
            print("‚ùå –§–∞–π–ª user_settings.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = db.get_user_stats()
    print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏:")
    print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats.get('total_users', 0)}")
    print(f"   –° –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏: {stats.get('users_with_settings', 0)}")
    print(f"   –ë–µ–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {stats.get('users_without_settings', 0)}")
    
    print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    migrate_from_json()
